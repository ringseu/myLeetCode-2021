/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        if (!head || !head->next)
            return head;

        ListNode *b = head;
        ListNode *p = head->next;

        while (p && p->next)
        {
            ListNode *tmp = b;
            b = p;
            p = p->next;
            b->next = tmp;
            if (tmp == head)
                tmp->next = NULL;
        }

        ListNode *tmp = b;
        b = p;
        b->next = tmp;
        if (tmp == head)
            tmp->next = NULL;

        return b;
    }
};
