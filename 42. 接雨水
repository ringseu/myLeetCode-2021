class Solution {
public:
    int trap(vector<int>& height) {
        int len = height.size();
        int result = 0;
        vector<int> left_max(len, 0);
        vector<int> right_max(len, 0);

        for (int i = 1; i < len; ++i)
        {
            left_max[i] = (height[i-1] > left_max[i-1]) ? height[i-1] : left_max[i-1];
            right_max[len-1-i] = (height[len-i] > right_max[len-i]) ? height[len-i] : right_max[len-i];
        }

        for (int i = 0; i < len; ++i)
        {
            int min = (left_max[i] < right_max[i]) ? left_max[i] : right_max[i];
            if (min > height[i])
            {
                result += (min - height[i]);
            }
        }

        return result;
    }
};
